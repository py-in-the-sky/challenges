import re


def pipe_value(value, functions):
    return reduce(lambda v, fn: fn(v), functions, value)


# STRING_PATTERN = r'"[^"\\]*(?:\\.[^"\\]*)*"'  # see: https://stackoverflow.com/a/5696141
STRING_PATTERN = r'".*?(?<!\\)"'
NUMBER_PATTERN = r"\d+"
TRUE_LITERAL = r"true"
FALSE_LITERAL = r"false"
NULL_LITERAL = r"null"
LEFT_BRACKET_TOKEN = r"{"
RIGHT_BRACKET_TOKEN = r"}"
LEFT_BRACE_TOKEN = r"["
LEFT_BRACE_PATTERN = r"\["
RIGHT_BRACE_TOKEN = r"]"
RIGHT_BRACE_PATTERN = r"\]"
COMMA_TOKEN = r","
COLON_TOKEN = r":"


ATOMS_PATTERN = r"|".join([STRING_PATTERN, TRUE_LITERAL, FALSE_LITERAL, NULL_LITERAL, NUMBER_PATTERN])
TOKENS_PATTERN = r"|".join([LEFT_BRACKET_TOKEN, RIGHT_BRACKET_TOKEN, LEFT_BRACE_PATTERN, RIGHT_BRACE_PATTERN,
                            COMMA_TOKEN, COLON_TOKEN])
JSON_LEX_PATTERN = r"{}|{}".format(ATOMS_PATTERN, TOKENS_PATTERN)


OBJECT = "OBJECT"
ARRAY = "ARRAY"
STRING = "STRING"
TRUE = "TRUE"
FALSE = "FALSE"
NULL = "NULL"
NUMBER = "NUMBER"
LEFT_BRACKET = "LEFT_BRACKET"
RIGHT_BRACKET = "RIGHT_BRACKET"
LEFT_BRACE = "LEFT_BRACE"
RIGHT_BRACE = "RIGHT_BRACE"
COMMA = "COMMA"
COLON = "COLON"
QUOTE = "QUOTE"


TOKENS = {
    LEFT_BRACE_TOKEN: LEFT_BRACE,
    RIGHT_BRACE_TOKEN: RIGHT_BRACE,
    LEFT_BRACKET_TOKEN: LEFT_BRACKET,
    RIGHT_BRACKET_TOKEN: RIGHT_BRACKET,
    COMMA_TOKEN: COMMA,
    COLON_TOKEN: COLON,
}


LITERAL_VALUES = {
    TRUE_LITERAL: TRUE,
    FALSE_LITERAL: FALSE,
    NULL_LITERAL: NULL,
}
